FROM python:3.9-alpine3.13
LABEL maintainer="prakash-patil"

ENV PYTHONUNBUFFERED 1

COPY ./requirements.txt /tmp/requirements.txt
COPY ./app /app
WORKDIR /app
EXPOSE 8000

RUN python -m venv /py && \
    /py/bin/python -m pip install --upgrade pip && \
    # /py/bin/pip install --upgrade pip && \
    /py/bin/pip install -r /tmp/requirements.txt && \
    rm -rf /tmp && \
    adduser \
        --disabled-password \
        --no-create-home \
        django-user

ENV PATH='/py/bin:$PATH'

USER django-user

# /py/bin/python -m pip install --upgrade pip


FROM python:3.9-alpine3.13
LABEL maintainer="prakashpatil.pobes"
ENV PYTHONUNBUFFERED 1

COPY ./requirements.txt /tmp/requirements.txt
COPY ./requirements.dev.txt /tmp/requirements.dev.txt
COPY ./app /app
WORKDIR /app
EXPOSE 8000

ARG DEV=false
RUN python -m venv /py && \
    /py/bin/pip install --upgrade pip && \
    apk add --update --no-cache postgresql-client && \
    apk add --update --no-cache --virtual .tmp-build-deps \
        build-base postgresql-dev musl-dev && \
    /py/bin/pip install -r /tmp/requirements.txt && \
    if [ $DEV = "true" ]; \
        then /py/bin/pip install -r /tmp/requirements.dev.txt ; \
    fi && \
    rm -rf /tmp && \
    apk del .tmp-build-deps && \
    adduser \
        --disabled-password \
        --no-create-home \
        django-user
ENV PATH="/py/bin:$PATH"
USER django-user





FROM python:3.9-alpine3.14
LABEL maintainer="prakash-patil"

ENV PYTHONUNBUFFERED 1

# Install required system packages
RUN apk --no-cache add ca-certificates openssl

# Copy application code
COPY ./requirements.txt /app/requirements.txt
COPY ./app /app
WORKDIR /app

# Install Python dependencies
RUN python -m venv /venv && \
    /venv/bin/pip install --upgrade pip && \
    /venv/bin/pip install -r requirements.txt && \
    rm -rf /tmp

# Create a non-root user for running the application
RUN adduser --disabled-password --no-create-home django-user
USER django-user

EXPOSE 8000